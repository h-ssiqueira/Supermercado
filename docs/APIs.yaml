# Edit on https://editor.swagger.io/
swagger: "2.0"
info:
  description: "Fluxo de mercadorias em um supermercado."
  version: "1.0.0"
  title: "Redes Supermercado"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
tags:
- name: "Estoque"
  description: "APIs de manipulação de estoques."
- name: "Local"
  description: "APIs de manipulação de locais."
- name: "Produto"
  description: "APIs de manipulação de produtos."
schemes:
- "http"
paths:
  /estoque:
    post:
      tags:
      - "Estoque"
      summary: "Cria um novo registro de estoque"
      description: "Adiciona um novo registro de estoque para o banco de dados"
      operationId: "createStock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/PostStock"
      responses:
        "201":
          description: "Registro criado"
        "400":
          description: "Entrada inválida"
        "500":
          description: "Erro interno de servidor"
    get:
      tags:
      - "Estoque"
      summary: "Buscar todo o estoque"
      description: "Busca todas as informações do estoque interno"
      operationId: "findStocks"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operação bem sucedida"
          schema:
            items:
              $ref: "#/definitions/GetStock"
        "404":
          description: "Estoque não encontrado"
        "500":
          description: "Erro interno de servidor"
  /estoque/{stockId}:
    get:
      tags:
      - "Estoque"
      summary: "Busca estoque por Id"
      description: "Retorna um único registro de estoque"
      operationId: "getStockById"
      produces:
      - "application/json"
      parameters:
      - name: "stockId"
        in: "path"
        description: "Id do estoque para buscar"
        required: true
        type: "integer"
        format: "int32"
        minimum: 1
      responses:
        "200":
          description: "Operação bem sucedida"
          schema:
            $ref: "#/definitions/GetStock"
        "400":
          description: "Id inválido"
        "404":
          description: "Estoque não encontrado"
        "500":
          description: "Erro interno de servidor"
  /estoque/{stockId}/qtd:
    put:
      tags:
      - "Estoque"
      summary: "Atualizar quantidade"
      description: "Atualiza a quantidade de produtos do estoque"
      operationId: "updateQuantityInStock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "stockId"
        description: "Informações relativas ao estoque"
        type: "integer"
        format: "int32"
        required: true
        minimum: 1
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PutQuantityStock"
      responses:
        "200":
          description: "Estoque atualizado com sucesso"
        "400":
          description: "Id inválido"
        "404":
          description: "Estoque não encontrado"
        "500":
          description: "Erro interno de servidor"
  /estoque/{stockId}/loc:
    put:
      tags:
      - "Estoque"
      summary: "Atualizar localização"
      description: "Atualiza a localização de produtos do estoque"
      operationId: "updateLocalizationInStock"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "stockId"
        description: "Informações relativas ao estoque"
        type: "integer"
        format: "int32"
        required: true
        minimum: 1
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PutLocalizationStock"
      responses:
        "200":
          description: "Estoque atualizado com sucesso"
        "400":
          description: "Id inválido"
        "404":
          description: "Estoque não encontrado"
        "500":
          description: "Erro interno de servidor"
  /local/:
    post:
      tags:
      - "Local"
      summary: "Cria local"
      description: "Cria um novo registro de local"
      operationId: "createLocal"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Informações do local"
        required: true
        schema:
          $ref: "#/definitions/PostLocal"
      responses:
        "201":
          description: "Local criado com sucesso"
          schema:
            $ref: "#/definitions/GetLocal"
        "404":
          description: "Local não encontrado"
        "500":
          description: "Erro interno de servidor"
    get:
      tags:
      - "Local"
      summary: "Retorna todos os locais"
      description: "Retorna todos os locais registrados no sistema"
      operationId: "getLocals"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "Operação bem sucedida"
          schema:
            $ref: "#/definitions/GetLocal"
        "400":
          description: "Id inválido"
        "500":
          description: "Erro interno de servidor"
  /local/{localId}:
    get:
      tags:
      - "Local"
      summary: "Busca local por id"
      description: "Busca um local com base no id"
      operationId: "getLocalById"
      produces:
      - "application/json"
      parameters:
      - name: "localId"
        in: "path"
        description: "Id do local a ser buscado"
        required: true
        type: "integer"
        format: "int32"
        minimum: 1
      responses:
        "200":
          description: "Operação bem sucedida"
          schema:
            $ref: "#/definitions/GetLocal"
        "400":
          description: "Request inválida"
        "404":
          description: "Local não encontrado"
        "500":
          description: "Erro interno de servidor"
  /local/{localId}/qtd:
    put:
      tags:
      - "Local"
      summary: "Atualizar quantidade"
      description: "Atualiza a quantidade de produtos do local"
      operationId: "updateQuantityInLocal"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "localId"
        description: "Informações relativas ao local"
        type: "integer"
        minimum: 1
        required: true
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PutQuantityLocal"
      responses:
        "200":
          description: "Local atualizado com sucesso"
        "400":
          description: "Id inválido"
        "404":
          description: "Local não encontrado"
        "500":
          description: "Erro interno de servidor"
  /local/{localId}/loc:
    put:
      tags:
      - "Local"
      summary: "Atualizar localização"
      description: "Atualiza a localização de produtos do local"
      operationId: "updateLocalizationInLocal"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "path"
        name: "localId"
        description: "Informações relativas ao local"
        type: "integer"
        minimum: 1
        required: true
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PutLocalizationLocal"
      responses:
        "200":
          description: "Local atualizado com sucesso"
        "400":
          description: "Id inválido"
        "404":
          description: "Local não encontrado"
        "500":
          description: "Erro interno de servidor"
  /produto:
    post:
      tags:
      - "Produto"
      summary: "Criar produto"
      description: "Criar um produto"
      operationId: "createProduct"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Informações relativas ao novo produto"
        required: true
        schema:
          $ref: "#/definitions/PostProduto"
      responses:
        "201":
          description: "Produto criado com sucesso"
          schema:
            $ref: "#/definitions/GetProduct"
        "400":
          description: "Request inválida"
        "500":
          description: "Erro interno de servidor"
    get:
      tags:
      - "Produto"
      summary: "Buscar produtos"
      description: "Busca todos os produtos registrados"
      operationId: "getProducts"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Operação bem sucedida"
          schema:
            $ref: "#/definitions/GetProduct"
        "404":
          description: "Produto não encontrado"
        "500":
          description: "Erro interno de servidor"
  /produto/{productId}:
    get:
      tags:
      - "Produto"
      summary: "Busca produto por id"
      description: "Busca um produto com base no id"
      operationId: "getProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Id do produto a ser buscado"
        required: true
        type: "integer"
        format: "int32"
        minimum: 1
      responses:
        "200":
          description: "Operação bem sucedida"
          schema:
            $ref: "#/definitions/GetProduct"
        "400":
          description: "Request inválida"
        "404":
          description: "Produto não encontrado"
        "500":
          description: "Erro interno de servidor"
  /produto/{productId}/lote:
    put:
      tags:
      - "Produto"
      summary: "Atualizar lote de produto"
      description: "Atualiza o lote de um produto com base em um Id fornecido."
      operationId: "updateLotInProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Id do produto a ser atualizado"
        required: true
        type: "integer"
        format: "int32"
        minimum: 1
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PutLotProduct"
      responses:
        "200":
          description: "Produto atualizado com sucesso"
        "400":
          description: "Id inválido"
        "404":
          description: "Produto não encontrado"
        "500":
          description: "Erro interno de servidor"
  /produto/{productId}/origem:
    put:
      tags:
      - "Produto"
      summary: "Atualizar origem de produto"
      description: "Atualiza a origem de um produto com base em um Id fornecido."
      operationId: "updateOriginInProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Id do produto a ser atualizado"
        required: true
        type: "integer"
        format: "int32"
        minimum: 1
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PutOriginProduct"
      responses:
        "200":
          description: "Produto atualizado com sucesso"
        "400":
          description: "Id inválido"
        "404":
          description: "Produto não encontrado"
        "500":
          description: "Erro interno de servidor"
  /produto/{productId}/nome:
    put:
      tags:
      - "Produto"
      summary: "Atualizar nome de produto"
      description: "Atualiza o nome de um produto com base em um Id fornecido."
      operationId: "updateNameInProduct"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "Id do produto a ser atualizado"
        required: true
        type: "integer"
        format: "int32"
        minimum: 1
      - in: "body"
        name: "body"
        schema:
          $ref: "#/definitions/PutNameProduct"
      responses:
        "200":
          description: "Produto atualizado com sucesso"
        "400":
          description: "Id inválido"
        "404":
          description: "Produto não encontrado"
        "500":
          description: "Erro interno de servidor"


definitions:
  PostStock:
    type: "object"
    required:
    - "name"
    properties:
      quantidade:
        type: "integer"
        format: "int32"
        minimum: 1
      localizacao:
        type: "string"
        maxLength: 50

  GetStock:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int32"
        minimum: 1
      quantidade:
        type: "integer"
        format: "int32"
        minimum: 1
      localizacao:
        type: "string"
        maxLength: 50

  PutQuantityStock:
    type: "object"
    required:
    - "name"
    properties:
      quantidade:
        type: "integer"
        format: "int32"
        minimum: 0

  PutLocalizationStock:
    type: "object"
    required:
    - "name"
    properties:
      localizacao:
        type: "string"
        maxLength: 50

  PostLocal:
    type: "object"
    properties:
      quantidade:
        type: "integer"
        format: "int32"
        minimum: 0
      localizacao:
        type: "string"
        maxLength: 50

  GetLocal:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        minimum: 1
      quantidade:
        type: "integer"
        format: "int32"
        minimum: 0
      localizacao:
        type: "string"
        maxLength: 50

  PutQuantityLocal:
    type: "object"
    required:
    - "name"
    properties:
      quantidade:
        type: "integer"
        format: "int32"
        minimum: 0

  PutLocalizationLocal:
    type: "object"
    required:
    - "name"
    properties:
      localizacao:
        type: "string"
        maxLength: 50

  PostProduto:
    type: "object"
    properties:
      nome:
        type: "string"
        maxLength: 255
      origem:
        type: "string"
        maxLength: 255
      lote:
        type: "string"
        maxLength: 20
      data_fabricacao:
        type: "string"
        format: "date"
      data_validade:
        type: "string"
        format: "date"

  GetProduct:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        minimum: 1
      nome:
        type: "string"
        maxLength: 255
      origem:
        type: "string"
        maxLength: 255
      lote:
        type: "string"
        maxLength: 20
      data_fabricacao:
        type: "string"
        format: "date"
      data_validade:
        type: "string"
        format: "date"

  PutLotProduct:
    type: "object"
    properties:
      lote:
        type: "string"
        maxLength: 20

  PutOriginProduct:
    type: "object"
    properties:
      origem:
        type: "string"
        maxLength: 255

  PutNameProduct:
    type: "object"
    properties:
      nome:
        type: "string"
        maxLength: 255
